@page "/"
@using Dotnet002MauiBlazorApp.Models

<h1>Todos</h1>

<div class="mb-3">
    <label for="exampleFormControlInput1" class="form-label">Description</label>
    <input 
        type="text" 
        class="form-control" 
        id="exampleFormControlInput1" 
        placeholder="Insert description" 
        @bind-value=@TodoModel.Description>
</div>

<button class="btn btn-primary" @onclick=@OnAddTodo>Add</button>


@if(Todos.Any())
{
  <h4>Not completed Todos</h4>
    <table class="table">
        <thead>
            <tr>
                <th scope="col">Todo</th>
                <th scope="col">Created At</th>
                <th scope="col">Complete</th>
            </tr>
        </thead>
        <tbody>

            @foreach (var item in Todos.Where(x => !x.IsCompleted.Value))
            {
                <tr>
                    <td>@item.Description</td>
                    <td>@item.CreatedAt</td>
                    <td><input type="checkbox" @onchange="(args) => OnCheckedChange(args, item)" /></td>

                </tr>                
            }

        </tbody>
    </table>
    <h4>Completed Todos</h4>
    <table class="table">
        <thead>
            <tr>
                <th scope="col">Todo</th>
                <th scope="col">Updated at</th>
                <th scope="col">Complete</th>
            </tr>
        </thead>
        <tbody>

            @foreach (var item in Todos.Where(x => x.IsCompleted.Value))
            {
                <tr>
                    <td>@item.Description</td>
                    <td>@item.UpdatedAt</td>
                    <td><input type="checkbox" @bind-value=@item.IsCompleted checked /></td>
                </tr>
            }

        </tbody>
    </table>
}

@code{

    private List<TodoModel> Todos { get; set; } = new();
    private TodoModel TodoModel { get; set; } = new();

    private void OnAddTodo()
    {
        if(TodoModel is not null)
        {
            if (!string.IsNullOrEmpty(TodoModel.Description))
            {
                var newTodo = new TodoModel();

                newTodo.Description = TodoModel.Description;
                newTodo.CreatedAt = DateTime.Now;
                newTodo.IsCompleted = false;
                Todos.Add(newTodo);
            }
        }
        StateHasChanged();
    }

    private void OnCheckedChange(ChangeEventArgs args, TodoModel todoModel)
    {
        todoModel.IsCompleted = (bool)args.Value;
        todoModel.UpdatedAt = DateTime.Now;
        StateHasChanged();
    }
}
